#---AWS---
aws.access.key=x
aws.secret.key=x
aws.region=us-east-1

#---SQS---
aws.sqs.endpoint.use=true
aws.sqs.endpoint.host=elasticmq
aws.sqs.endpoint.port=9324
aws.sqs.queue.recebimento.name=FilaRecebimento
aws.sqs.queue.envio.gateway.name=FilaEnvioGateway
aws.sqs.queue.recebimento.gateway.name=FilaRecebimentoGateway
aws.sqs.queue.envio.cliente.name=FilaCliente
aws.sqs.queue.recebimento.retorno.name=FilaRecebimentoRetorno
aws.sqs.queue.envio.psi.name=FilaSituacaoIdentificador
aws.sqs.queue.envio.sap.name=FilaEnvioSap
aws.sqs.max.retrieve=10
#-----Manter padronizado ISO8601 ex: PT0H2M0S = 2 minutos
gestao.recebimento.notificacao.core.bank=PT0H2M0S

#---HornetQ---
spring.hornetq.host=hornetq
spring.hornetq.port=5445
spring.hornetq.mode=native
spring.hornetq.max.retrieve=101
spring.hornetq.queue.name=transacoesprocessadas
spring.hornetq.user=fast
spring.hornetq.password=fast1234

#---DynamoDb---
aws.dynamodb.endpoint.use=true
aws.dynamodb.endpoint.host=dynamodb
aws.dynamodb.endpoint.port=8000
aws.dynamodb.table.ger.name.conforme=Recebimento

#---Spring Scheduler---
#Agendamento diario
#Executa todo dia as oito da manhã
recebimento.agendado.diario=0 0 8 * * *

#------------Scheduler por forma de pagamento----------------
#CARTAO
quantidade.tentativa.cartao.credito=2
# Executa de duas em duas horas
processamento.forma.de.pagamento.cartao.intervalo.cron=0 0 */2 * * *
#BOLETO
processamento.forma.de.pagamento.boleto.intervalo.cron=0 0 */2 * * *
quantidade.tentativa.boleto=2
   